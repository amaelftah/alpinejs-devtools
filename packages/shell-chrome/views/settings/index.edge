<div
    data-testid="settings-panel"
    x-show="settingsPanelOpen"
    class="inset-0 absolute flex flex-col items-center justify-center z-max"
>
    <div class="absolute bg-alpine-400 opacity-30 inset-0"></div>
    <div class="p-4 flex-1 flex items-center justify-center w-full relative z-50" @click="settingsPanelOpen = false">
        <div
            x-show.transition.in.opacity="settingsPanelOpen"
            class="bg-white w-full h-full p-4 shadow-lg border border-silver-400 relative"
            @click.stop
        >
            <button
                data-testid="settings-panel-close-button"
                class="absolute top-0 right-0 focus:outline-none block"
                @click="settingsPanelOpen = false"
            >
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 20 20"
                    class="text-black absolute top-1 right-1 w-5 h-5"
                    fill="currentColor"
                >
                    <path
                        fill-rule="evenodd"
                        d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                        clip-rule="evenodd"
                    />
                </svg>
            </button>
            <div
                x-data="{
                    pages: [
                        {
                            name: 'Preferences',
                            enabled: true,
                        },
                        {
                            name: 'Experimental',
                            enabled: {{ devOnly }},
                        }
                    ].filter(p => p.enabled),
                    active: 'Preferences',
                    savedNotice: false,
                    settings: {
                        error: 'Something went wrong...'
                    },
                    async updateSetting(name, value) {
                        this.savedNotice = true
                        this.settings[name] = value
                        document.getElementById('app').__x.$data.updateSetting(name, value)
                        await new Promise(resolve => setTimeout(resolve, 3000))
                        this.savedNotice = false
                    },
                    waitForSettings() {
                        const checker = setInterval(() => {
                            if (this.settings.loaded) {
                                clearInterval(checker)
                                return
                            }
                            try {
                                this.settings = document.getElementById('app').__x.$data.settings
                            } catch(error) {}
                        }, 2500)
                    }
                }"
                class="flex space-x-4 h-full"
                x-init="waitForSettings()"
            >
                <div x-show="settings.error" x-text="'Error: ' + settings.error"></div>
                <div x-show="!settings.error" class="flex flex-col justify-between">
                    <div>
                        <h2 class="text-lg font-light">Settings</h2>
                        <nav class="flex flex-col items-start text-sm mt-3 text-cool-gray-500 space-y-1">
                            <template x-for="page in pages" :key="page.name">
                                <button
                                    x-text="page.name"
                                    class="focus:outline-none border-l-8 pl-2 border-transparent"
                                    :class="{ 'border-ice-500': active === page.name }"
                                    @click="active = page.name"
                                ></button>
                            </template>
                        </nav>
                    </div>
                    <div
                        x-show.transition.duration.200="savedNotice"
                        class="text-base bg-ice-300 text-center p-2 shadow-lg rounded">
                        saved!
                    </div>
                </div>
                <div x-show="!settings.error" class="flex-grow">
                    @each(page in ['Preferences', 'Experimental'], include = 'settings/pages/' + page.toLowerCase())
                    @endeach
                </div>
            </div>
        </div>
    </div>
</div>
